on:
  workflow_dispatch:
    inputs:
      hax:
        description: "Hax"
        type: "string"
        default: "main"
      charon:
        description: "Charon"
        type: "string"
        default: "main"
      eurydice:
        description: "Eurydice"
        type: "string"
        default: "main"
      libcrux:
        description: "Libcrux"
        type: "string"
        default: "dev"

jobs:
  test:
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: update
        run: ./update.sh
        env:
          HAX_BRANCH: ${{ inputs.hax }}
          CHARON_BRANCH: ${{ inputs.charon }}
          EURYDICE_BRANCH: ${{ inputs.eurydice }}
          LIBCRUX_BRANCH: ${{ inputs.libcrux }}

      - name: generate zulip message
        run: |
          OUTPUT=$(echo "*Manual run*\n$(nix shell nixpkgs#jq --command ./message.sh)")
          echo "message=$OUTPUT" >> $GITHUB_OUTPUT
        id: message
        env:
          RUN: ${{ github.run_id }}

      - name: zulip info message
        uses: zulip/github-actions-zulip/send-message@v1
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          email: prosecco@inria.fr
          organization-url: https://hacspec.zulipchat.com
          to: 440084
          type: stream
          topic: ci
          content: ${{ steps.message.outputs.message }}

      - name: zulip error message
        if: ${{ failure() }}
        uses: zulip/github-actions-zulip/send-message@v1
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          email: prosecco@inria.fr
          organization-url: https://hacspec.zulipchat.com
          to: 440084
          type: stream
          topic: ci
          content: "Unexpected Error: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
