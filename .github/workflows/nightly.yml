on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches-ignore:
      - main

# Cancel previous versions of this job that are still running.
concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  update-flake:
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: update
        run: nix develop --command ./update.sh

      # Commit the update onto a new branch
      - name: commit
        run: |
          git config --local user.name "Prosecco"
          git config --local user.email "prosecco@inria.fr"
          [[ $(git diff) != "" ]] && git commit -am "nightly update"
          git push origin --force HEAD:nightly

  # This would be nicer as a matrix, but that hits limits of what github actions can currenctly express. See e.g.:
  # - https://github.com/orgs/community/discussions/17245
  # - https://github.com/actions/runner/pull/2477
  hax:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
      - run: ./check.sh hax

  charon:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
      - run: ./check.sh charon

  aeneas:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
      - run: ./check.sh aeneas

  eurydice:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
      - run: ./check.sh eurydice

  scylla:
    check:
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: Clone scylla
        uses: actions/checkout@v4
        with:
          repository: AeneasVerif/scylla
          path: scylla
          ref: main

      - name: Clone symcrypt
        uses: actions/checkout@v4
        with:
          repository: msprotz/SymCrypt
          path: symcrypt
          submodules: true
          ref: protz/scylla

      - name: Clone frodo
        uses: actions/checkout@v4
        with:
          repository: msprotz/PQCrypto-LWEKE
          path: pqcrypto-lweke
          submodules: true
          ref: master

      - name: Clone bzip2
        uses: actions/checkout@v4
        with:
          repository: msprotz/bzip2
          path: bzip2
          submodules: true
          ref: master

      - name: Build symcrypt
        working-directory: symcrypt
        run: |
          nix develop "$GITHUB_WORKSPACE/scylla" --command scripts/build.py cmake build --no-fips --no-asm --config Release

      - name: Build and test scylla
        working-directory: scylla
        run: |
          export SYMCRYPT_HOME=$GITHUB_WORKSPACE/symcrypt
          export PQCRYPTO_HOME=$GITHUB_WORKSPACE/pqcrypto-lweke
          export BZIP2_HOME=$GITHUB_WORKSPACE/bzip2
          nix develop --command make test

      - name: Check output
        working-directory: scylla
        run: |
          # Check that there are no differences between the generated outputs
          # and the committed outputs.
          if git diff --exit-code --quiet out > /dev/null; then
            echo "Ok: the regenerated files are the same as the checked out files"
          else
            echo "Error: the regenerated files differ from the checked out files"
            git diff out
            exit 1
          fi

  ml-kem:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        with:
          ref: nightly
        uses: actions/checkout@v4
      - run: ./check.sh ml-kem

  ml-dsa:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        with:
          ref: nightly
        uses: actions/checkout@v4
      - run: ./check.sh ml-dsa

  bertie:
    needs: update-flake
    runs-on: [self-hosted, linux, nix]
    steps:
      - name: checkout
        with:
          ref: nightly
        uses: actions/checkout@v4
      - run: ./check.sh bertie

  process_results:
    needs: [hax, charon, aeneas, eurydice, ml-kem, ml-dsa, bertie]
    runs-on: [self-hosted, linux, nix]
    if: ${{ success() || failure() }} # Will always run unless canceled
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
          fetch-depth: 0 # deep clone in order to get access to other commits

      - name: generate results message
        env:
          RUN: ${{ github.run_id }}
          RESULTS: ${{ toJSON(needs) }}
        run: |
          echo "$RESULTS" > results.json
          nix shell nixpkgs#jq --command ./message.sh | tee "$GITHUB_ENV"

      - name: push to main
        if: ${{ env.SUCCESS == '1' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') }}
        run: git push origin HEAD:main

      - name: send zulip info message
        uses: slackapi/slack-github-action@v1.25.0
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        with:
          payload: |
            { "text": ${{ toJSON(env.MSG) }} }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ZULIP_WEBHOOK_URL }}

      - name: send zulip error message
        if: ${{ failure() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') }}
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            { "text": "Unexpected Error: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ZULIP_WEBHOOK_URL }}
